#!/bin/bash

# Pre-commit hook for PHP_CodeSniffer and PSALM
# This script runs before every commit to ensure code quality

echo "Running code quality checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Get list of changed PHP files
CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.php$')

if [ -z "$CHANGED_FILES" ]; then
    echo -e "${GREEN}✓ No PHP files to check${NC}"
    exit 0
fi

echo "Checking files:"
echo "$CHANGED_FILES"
echo ""

# Flag to track if any checks failed
FAILED=0

# Run PHP_CodeSniffer
echo -e "${YELLOW}Running PHP_CodeSniffer...${NC}"
if docker compose exec -T app ./vendor/bin/phpcs --standard=phpcs.xml $CHANGED_FILES; then
    echo -e "${GREEN}✓ PHP_CodeSniffer passed${NC}"
else
    echo -e "${RED}✗ PHP_CodeSniffer failed${NC}"
    echo "Run 'docker compose exec app ./vendor/bin/phpcbf' to auto-fix issues"
    FAILED=1
fi

echo ""

# Run PSALM
echo -e "${YELLOW}Running PSALM static analysis...${NC}"
if docker compose exec -T app ./vendor/bin/psalm --show-info=false $CHANGED_FILES; then
    echo -e "${GREEN}✓ PSALM passed${NC}"
else
    echo -e "${RED}✗ PSALM failed${NC}"
    echo "Fix the static analysis issues before committing"
    FAILED=1
fi

echo ""

# Exit with error if any check failed
if [ $FAILED -eq 1 ]; then
    echo -e "${RED}✗ Pre-commit checks failed. Commit aborted.${NC}"
    echo ""
    echo "To fix issues:"
    echo "  • Run: docker compose exec app ./vendor/bin/phpcbf (auto-fix code style)"
    echo "  • Fix PSALM issues manually"
    echo "  • Re-run: git commit"
    exit 1
fi

echo -e "${GREEN}✓ All pre-commit checks passed!${NC}"
exit 0